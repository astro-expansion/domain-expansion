name: Release

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - labeled

defaults:
  run:
    shell: bash

env:
  FORCE_COLOR: true

jobs:
  changelog:
    name: Changelog PR or Release
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'preview') }}
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install

      - name: Build Packages
        run: pnpm run package:build

      - name: Publish preview
        if: ${{ contains(github.event.pull_request.labels.*.name, 'preview') }}
        run: pnpm exec changeset publish
        env:
          # Use Node auth from above
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release Pull Request or Publish
        id: changesets
        if: ${{ github.event_name == 'push' }}
        uses: changesets/action@v1
        with:
          # Note: pnpm install after versioning is necessary to refresh lockfile
          version: pnpm version
          publish: pnpm exec changeset publish
          commit: '[ci] release'
          title: '[ci] release'
        env:
          GITHUB_TOKEN: ${{ secrets.COMMIT_TOKEN }}
          # Needs access to publish to npm
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
